# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # This ensures we get the full commit history
    
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'adopt'
        cache: maven
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    
    - name: Get current time
      id: time
      run: echo "time=$(date +'%H:%M:%S')" >> $GITHUB_OUTPUT
    
    - name: Get current commit
      id: commit
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Build with Maven and measure time
      id: build
      run: |
        start_time=$(date +%s)
        mvn --batch-mode --update-snapshots verify
        end_time=$(date +%s)
        build_time=$((end_time - start_time))
        echo "build_time=$build_time" >> $GITHUB_OUTPUT
    
    - name: Update build time data
      # if: github.ref == 'refs/heads/master'
      run: |
        # Ensure docs directory exists
        mkdir -p docs
        
        # Set file path
        FILE_PATH="docs/build-times.csv"
        
        # Check if file exists, create if it doesn't
        if [ ! -f "$FILE_PATH" ]; then
          echo "date,time,commit,buildtime" > "$FILE_PATH"
        fi

        # Debug outputs to see what values we're getting
        echo "Date: ${{ steps.date.outputs.date }}"
        echo "Time: ${{ steps.time.outputs.time }}"
        echo "Commit: ${{ steps.commit.outputs.sha }}"
        echo "Build time: ${{ steps.build.outputs.build_time }}"
        
        # Append the new build time data
        echo "${{ steps.date.outputs.date }},${{ steps.time.outputs.time }},${{ steps.commit.outputs.sha }},${{ steps.build.outputs.build_time }}" >> "$FILE_PATH"
        
        # Configure Git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Commit and push the updated CSV
        git add "$FILE_PATH"
        git commit -m "Update build time data [skip ci]" || echo "No changes to commit"
        git push
    
    - name: Upload build result
      run: mkdir staging && cp use-assembly/target/*.zip staging
    
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
